train_dataloader:
  dataset:
    transforms:
      ops:
        - {type: RandomPhotometricDistort, p: 0.5}
        - {type: RandomRotate, limit: 30, p: 0.5, fill: 0}
        - {type: RandomZoomOut, side_range: [1.0, 1.5], fill: 0}
        - {type: RandomIoUCrop, p: 0.8}
        - {type: SanitizeBoundingBoxes, min_size: 1}
        - {type: Resize, size: [1920, 1920], }
        - {type: SanitizeBoundingBoxes, min_size: 1}
        - {type: ConvertPILImage, dtype: 'float32', scale: True}
        - {type: ConvertBoxes, fmt: 'cxcywh', normalize: True}
      policy:
        name: stop_epoch
        epoch: 72 # epoch in [71, ~) stop `ops`
        ops: ['RandomPhotometricDistort', 'RandomZoomOut', 'RandomIoUCrop', 'RandomRotate']
  collate_fn:
    type: BatchImageCollateFunction
    base_size: 1920
    base_size_repeat: 3
    stop_epoch: 72 # epoch in [72, ~) stop `multiscales`

  shuffle: True
  total_batch_size: 16 # 4 GPUs * 2 per GPU
  num_workers: 4  # 줄여서 안정성 향상


val_dataloader:
  dataset:
    transforms:
      ops:
        - {type: Resize, size: [1920, 1920], }
        - {type: ConvertPILImage, dtype: 'float32', scale: True}
  shuffle: False
  total_batch_size: 32 # 4 GPUs * 2 per GPU
  num_workers: 4 # 줄여서 안정성 향상
